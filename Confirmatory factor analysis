
Confirmatory factor analysis
#Sample_1
##Sample_2
###Sample_3
####Sample_4

#Sample_1
jmv::cfa(
    data = data,
    factors = list(
        list(
            label="Factor 1",
            vars=c(
                "Q80_74",
                "Q80_76",
                "Q80_77",
                "Q80_66",
                "Q80_86",
                "Q80_79")),      
        list(
            label="Factor 2",
            vars=c(
                "Q80_18",
                "Q80_61",
                "Q80_98",
                "Q80_16",
                "Q80_20",
                "Q80_24",
                "Q80_62")),        
        list(
            label="Factor 3",
            vars=c(
                "Q80_31",
                "Q80_40",
                "Q80_44",
                "Q80_33")),
        list(
            label="Factor 4",
            vars=c(
                "Q80_47",
                "Q80_10",
                "Q80_3",
                "Q80_2"))),
    resCov = NULL,
    stdEst = TRUE,
    resInterceptEst = TRUE,
    fitMeasures = c(
        "cfi",
        "tli",
        "rmsea",
        "srmr",
        "aic",
        "bic"),
    pathDiagram = TRUE,
    mi = TRUE)
as.data.frame("Factor 1", "Factor 2", "Factor 3", "Factor 4") #use Rj model to create data frame

##Sample_2
    jmv::cfa(
    data = data,
    factors = list(
        list(
            label="Factor 1",
            vars=c(
                "Q80_20",
                "Q80_22",
                "Q80_23",
                "Q80_24",
                "Q80_25",
                "Q80_26")),      
        list(
            label="Factor 2",
            vars=c(
                "Q80_1",
                "Q80_3",
                "Q80_4",
                "Q80_7",
                "Q80_8",
                "Q80_10",
                "Q80_11")),        
        list(
            label="Factor 3",
            vars=c(
                "Q80_30",
                "Q80_31",
                "Q80_32",
                "Q80_33")),
        list(
            label="Factor 4",
            vars=c(
                "Q80_13",
                "Q80_15",
                "Q80_16",
                "Q80_18"))),
    resCov = NULL,
    stdEst = TRUE,
    resInterceptEst = TRUE,
    fitMeasures = c(
        "cfi",
        "tli",
        "rmsea",
        "srmr",
        "aic",
        "bic"),
    pathDiagram = TRUE,
    mi = TRUE)
as.data.frame("Factor 1", "Factor 2", "Factor 3", "Factor 4") #use Rj model to create data frame

 ###Sample_3
    jmv::cfa(
    data = data,
    factors = list(
        list(
            label="Factor 1",
            vars=c(
                "Recovery scale_15",
                "Recovery scale_17",
                "Recovery scale_18",
                "Recovery scale_19",
                "Recovery scale_20",
                "Recovery scale_21")),      
        list(
            label="Factor 2",
            vars=c(
                "Recovery scale_1",
                "Recovery scale_3",
                "Recovery scale_4",
                "Recovery scale_6",
                "Recovery scale_7",
                "Recovery scale_8",
                "Recovery scale_9")),        
        list(
            label="Factor 3",
            vars=c(
                "Recovery scale_22",
                "Recovery scale_23",
                "Recovery scale_24",
                "Recovery scale_25")),
        list(
            label="Factor 4",
            vars=c(
                "Recovery scale_10",
                "Recovery scale_12",
                "Recovery scale_13",
                "Recovery scale_14"))),
    resCov = NULL,
    stdEst = TRUE,
    resInterceptEst = TRUE,
    fitMeasures = c(
        "cfi",
        "tli",
        "rmsea",
        "srmr",
        "aic",
        "bic"),
    pathDiagram = TRUE,
    mi = TRUE)
as.data.frame("Factor 1", "Factor 2", "Factor 3", "Factor 4") #use Rj model to create data frame

####Sample_4
    jmv::cfa(
    data = data,
    factors = list(
        list(
            label="Factor 1",
            vars=c(
                "Recovery scale_12",
                "Recovery scale_13",
                "Recovery scale_14",
                "Recovery scale_15",
                "Recovery scale_16",
                "Recovery scale_17")),      
        list(
            label="Factor 2",
            vars=c(
                "Recovery scale_1",
                "Recovery scale_2",
                "Recovery scale_3",
                "Recovery scale_4",
                "Recovery scale_5",
                "Recovery scale_6",
                "Recovery scale_7‚Äù)),        
        list(
            label="Factor 3",
            vars=c(
                "Recovery scale_18",
                "Recovery scale_19",
                "Recovery scale_20",
                "Recovery scale_21")),
        list(
            label="Factor 4",
            vars=c(
                "Recovery scale_8",
                "Recovery scale_9",
                "Recovery scale_10",
                "Recovery scale_11"))),
    resCov = NULL,
    stdEst = TRUE,
    resInterceptEst = TRUE,
    fitMeasures = c(
        "cfi",
        "tli",
        "rmsea",
        "srmr",
        "aic",
        "bic"),
    pathDiagram = TRUE,
    mi = TRUE)
as.data.frame("Factor 1", "Factor 2", "Factor 3", "Factor 4") #use Rj model to create data frame

#Factor 1 = social worth, Factor 2 = self-worth, Factor 3 = self-understanding, Factor 4 = life worth


